<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gift.futurestrading.member.mapper.ConsumerMapper">
	<!-- 날짜별 체결내역 select -->
	<select id="selectSignSearch" parameterType="String" resultType="com.gift.futurestrading.member.vo.ConsumerSignDetailVo">
		SELECT sign_pk as signPk
			, fk_order_buy__sign as fkOrderBuySign
			, fk_seller__sign as fkSellerSign
			, sign_seller_name as signSellerName
			, sign_per_price as signPerPrice
			, sign_amount as signAmount
			, sign_total_price as signTotalPrice
			, sign_initial_margin as signInitialMargin
			, sign_date as signDate
			, sign_futures_trade_begin_date as signFuturesTradeBeginDate
			, sign_futures_trade_end_date as signFuturesTradeEndDate
		FROM sign
		WHERE fk_consumer__sign = #{getId}
			AND (date(sign_date) <![CDATA[>=]]> #{startDate} AND date(sign_date) <![CDATA[<=]]> #{endDate}) 
	</select>
	
	<!-- 체결내역 select -->
	<select id="selectSignDetail" resultType="com.gift.futurestrading.member.vo.ConsumerSignDetailVo">
		SELECT sign_pk as signPk
			, fk_order_buy__sign as fkOrderBuySign
			, fk_seller__sign as fkSellerSign
			, sign_seller_name as signSellerName
			, sign_per_price as signPerPrice
			, sign_amount as signAmount
			, sign_total_price as signTotalPrice
			, sign_initial_margin as signInitialMargin
			, sign_date as signDate
			, sign_futures_trade_begin_date as signFuturesTradeBeginDate
			, sign_futures_trade_end_date as signFuturesTradeEndDate
		FROM sign
		WHERE fk_consumer__sign = #{getId}
	</select>
	
	<!-- 문자  + 숫자 조합의 primary key에서 숫자를 가져오기위한(기본키 자동증가 구현을 위해) select -->
	<select id="selectPkOfAccountConsumer" resultType="int">
		select MAX(CAST(substring(account_no_pk,12) AS DECIMAL)) AS NO from account_consumer;
	</select>

	<!-- 계좌를 등록하는 insert -->
	<insert id="insertAccountOfConsumer" parameterType="map">
		INSERT
			INTO account_consumer
				(account_no_pk,
				fk_contract_bank_user__account_consumer,
				fk_consumer__account_consumer,
				account_consumer_name,
				account_consumer_account_no,
				account_consumer_bank_name,
				account_consumer_sign_up_date)
			VALUES(#{accountNoPk},
				(
					SELECT 
						contract_bank_user_no_pk 
					FROM
						contract_bank_user 
					WHERE
						contract_bank_name=#{accountConsumerBankName}
				 ),
				#{fkConsumerAccountConsumer},
				#{accountConsumerName},
				#{accountConsumerAccountNo},
				#{accountConsumerBankName},
				now());
	</insert>

	<!-- 유효한 계좌인지 조회하는 select -->
 	<select id="selectAccountOfConsumer" parameterType="map" resultType="String">
		SELECT
			contract_bank_user_account_status AS contractBankUserAccountStatus
		FROM 
			contract_bank_user
		WHERE 
			contract_bank_name = #{bankName}
		AND contract_bank_user_name = #{consumerName}
		AND contract_bank_user_account_no = #{consumerAccount};
	</select>

	<!-- 구매자 비밀번호 수정 처리 -->
	<update id="updateConsumerMypagePassword" parameterType="map">
	UPDATE consumer as c 
	SET
		c.consumer_password=password(#{consumerChangePassword})
	WHERE
		c.consumer_id_pk=#{consumerIdPk}
	AND
		c.consumer_password=password(#{consumerPassword})
	</update>
	
	<!-- 구매자 개인정보 수정 처리 -->
	<update id="updateConsumerMypageInformation" parameterType="com.gift.futurestrading.member.vo.ConsumerMypageVo">
		UPDATE consumer as c 
		SET
			c.consumer_email= #{consumerEmail}
			, c.consumer_address_post_code=#{consumerAddressPostCode}
			, c.consumer_address_road=#{consumerAddressRoad}
			, c.consumer_address_detail=#{consumerAddressDetail}
			, c.consumer_phone=#{consumerPhone}
		WHERE
			c.consumer_id_pk=#{consumerIdPk}
	</update>

	<!-- 구매자 개인정보 수정폼 -->
	<select id="selectConsumerMypageInformation" parameterType="map" resultType="com.gift.futurestrading.member.vo.ConsumerMypageVo">
		SELECT
			consumer_id_pk as consumerIdPk,
			consumer_name as consumerName,
			consumer_email as consumerEmail,
			consumer_jumin_no as consumerJuminNo,
			consumer_address_post_code as consumerAddressPostCode,
			consumer_address_road as consumerAddressRoad,
			consumer_address_detail as consumerAddressDetail,
			consumer_phone as consumerPhone,
			consumer_sign_up_date as consumerSignUpDate,
			consumer_status as consumerStatus,
			consumer_admit_check_flag as consumerAdmitCheckFlag
		FROM
			consumer
		WHERE
			consumer_id_pk=#{mypageId}
		AND
			consumer_password=password(#{mypagePassword}) 
	</select>
	
	<!-- 구매자 회원가입을 위한 insert -->
	<insert id="insertConsumer" parameterType="map">
		INSERT 
			INTO consumer
				(consumer_id_pk,
				consumer_password,
				consumer_name,
				consumer_email,
				consumer_jumin_no,
				consumer_address_post_code,
				consumer_address_road,
				consumer_address_detail,
				consumer_phone,
				consumer_sign_up_date,
				consumer_status,
				consumer_admit_check_flag) 
			VALUES(#{consumer_id_pk},
				PASSWORD(#{consumer_password}),
				#{consumer_name},
				#{consumer_email},
				#{consumer_jumin_no},
				#{consumer_address_post_code},
				#{consumer_address_road},
				#{consumer_address_detail},
				#{consumer_phone},
				now(),
				'정상',
				'TRUE');
	</insert>
	
	<!-- 아이디 중복체크를 위한 select -->
	<select id="selectIdCheck" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM view_total_id WHERE total_id = #{id};
	</select>
	
</mapper>